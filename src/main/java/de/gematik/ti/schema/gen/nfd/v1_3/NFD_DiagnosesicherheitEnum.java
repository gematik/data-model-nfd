/*
* Copyright (c) 2020 gematik GmbH
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*    http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

//
//  This is a generated file, do not edit.
//  This file was generated from an xsd file and represents a simple or complex type of it.
//  Generated by a fork of xsd2cocoa (see https://github.com/Daij-Djan/xsd2cocoa) and a specified custom transform template.
//
package de.gematik.ti.schema.gen.nfd.v1_3;

import de.gematik.ti.schema.gen.nfd.utils.*;

import org.w3c.dom.Element;
import org.w3c.dom.Node;

public enum NFD_DiagnosesicherheitEnum {
    A, // case A = "A"
    G, // case G = "G"
    V, // case V = "V"
    Z, // case Z = "Z"
    empty; // case empty = ""
    
    @Override
    public String toString() {
        if (this.equals(empty)) {
            return "";
        } else {
            return super.toString();
        }
    }
    
    public static NFD_DiagnosesicherheitEnum fromString(String enumString) {
        if (enumString.equals("")) {
            return empty;
        } else {
            return NFD_DiagnosesicherheitEnum.valueOf(enumString);
        }
    }
    
    public static NFD_DiagnosesicherheitEnum deserialize(Node node) {
        if (node == null) {
            return null;
        }
        Element element = (Element) node;
        return fromString(element.getTextContent());
    }
}

